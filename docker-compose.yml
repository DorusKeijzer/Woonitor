
services:
  redis:
    image: redis:7
    ports:
      - "6379:6379"
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    env_file: .env
    profiles: ["backend"]

  postgres:
    image: postgres:16
    container_name: postgres_db
    restart: always
    env_file: .env
    ports:
      - "5432:5432"
    volumes:
      - ./init:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    profiles: ["backend"]

  scraper:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    # The new, working command for the scraper service
    command: ["bash", "-c", "Xvfb :99 -screen 0 1024x768x24 & export DISPLAY=:99 && /app/.venv/bin/python scrapers/scraper.py"]
    # command: ["bash", "-c", "Xvfb :99 -screen 0 1024x768x24 & export DISPLAY=:99 && python scrapers/scraper.py"]
    profiles: ["scraper"]

  crawler:
      build:
        context: .
        dockerfile: Dockerfile
      env_file: .env
      command: ["bash", "-c", "Xvfb :99 -screen 0 1024x768x24 & export DISPLAY=:99 && python scrapers/crawler.py"]
      profiles: ["crawler"]

  writer:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    command: ["python", "scrapers/writer.py"]
    profiles: ["writer"]

  streamlit:
    build:
      context: ./dashboard/
    ports:
      - "8501:8501"
    env_file: .env
    depends_on:
      - postgres
      - redis
    profiles: ["dashboard"]

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    env_file: .env
    profiles: ["backend"]
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"

  grafana:
    image: grafana/grafana:latest
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    ports:
      - "3000:3000"
    env_file: .env
    profiles: ["backend"]
    depends_on:
      - prometheus

  postgres_exporter:
    image: prometheuscommunity/postgres-exporter

    environment:
      DATA_SOURCE_NAME: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable"
    ports:
      - "9187:9187"
    profiles: ["backend"]
    depends_on:
      - postgres

  redis_exporter:
    image: oliver006/redis_exporter
    ports:
      - "9121:9121"
    profiles: ["backend"]
    depends_on:
      - redis

  pushgateway:
    image: prom/pushgateway:latest
    ports:
      - "9091:9091"
    profiles: ["backend"]



volumes:
  prometheus_data:
  grafana_data:
  postgres_data:
